name: Github-Docker Hub LLMOps pipeline - DAOUDA_GABORIT_GUEYE_OUEDRAOGO

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  REPO_NAME: ${{ secrets.REPO_NAME }}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0'  # Exécuter chaque semaine pour la mise à jour des dépendances

jobs:
  update_dependencies:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade -r requirements.txt

      - name: Update requirements
        run: |
          pip freeze > requirements.txt

      - name: Report updates
        run: |
          echo "Dependencies have been updated. Please review and commit the changes manually."

  ci_pipeline:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Format
        run: |
          black app.py

      - name: Lint
        run: |
          pylint --disable=R,C app.py

      - name: Test
        run: |
          python -m pytest -vv test.py

  cd_pipeline:
    runs-on: ubuntu-latest
    needs: [ci_pipeline]

    steps:
      - uses: actions/checkout@v3

      - name: Docker login
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d--%H-%M')" >> $GITHUB_ENV

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag $DOCKER_USER/$REPO_NAME:${{ env.date }}

      - name: Docker Push
        run: docker push $DOCKER_USER/$REPO_NAME:${{ env.date }}
